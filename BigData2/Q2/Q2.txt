
Question 2.a

COMMAND -> spark-shell --executor-cores 8

var dataFile = sc.textFile("/yelpdatafall/review/review.csv")

def functavg[T]( t: Iterable[T] )( implicit num: Numeric[T] ) = {
     num.toDouble( t.sum ) / t.size
     }

var mapDatafile  = dataFile.map(a => a.split("\\^")).map(b => (lb(2),lb(3).toDouble)).groupByKey()

val sort = mapDatafile.map(a => (a._1, functavg (a._2))).sortByKey()

val outputq2a =sort.map(a => (a._2, a._1)). top(10).foreach(println)

Time - 1.904863 s

(5.0,zx1lLUvlRUN5nQlSj3HRDw)
(5.0,zweAzZDJ8SfwUID1UEGkbA)
(5.0,zvo21oKr656PQNVblYxYlg)
(5.0,ztswDToyZGyL_dxo0CEQew)
(5.0,zrmO-d-Mw3kv9dWa7Trr9Q)
(5.0,zqZjrcTf9Bc7r_VLGN4mrw)
(5.0,zkD9AtBT9ZkLFiV31gvEGw)
(5.0,ziS_fZ7Z99fa4qNVr879vg)
(5.0,zh2Eja5h54vM7GUibHoi9A)
(5.0,zh-MNFY4TyG7x2itUVlESQ)
outputq2a: Unit = ()



Question 2.b

COMMAND -> spark-shell --master yarn-client --executor-memory 2G --executor-cores 6 --num-executors 6 

var dataFile = sc.textFile("/yelpdatafall/review/review.csv")

def functavg[T]( t: Iterable[T] )( implicit num: Numeric[T] ) = {
     num.toDouble( t.sum ) / t.size
     }

var mapDatafile  = dataFile.map(a => a.split("\\^")).map(lb => (lb(2),lb(3).toDouble)).groupByKey()

val sort = mapDatafile.map(a => (a._1, functavg (a._2))).sortByKey()

val outputq2b =sort.map(a => (a._2, a._1)). top(10).foreach(println)

Time taken -   4.333042 s

(5.0,zx1lLUvlRUN5nQlSj3HRDw)
(5.0,zweAzZDJ8SfwUID1UEGkbA)
(5.0,zvo21oKr656PQNVblYxYlg)
(5.0,ztswDToyZGyL_dxo0CEQew)
(5.0,zrmO-d-Mw3kv9dWa7Trr9Q)
(5.0,zqZjrcTf9Bc7r_VLGN4mrw)
(5.0,zkD9AtBT9ZkLFiV31gvEGw)
(5.0,ziS_fZ7Z99fa4qNVr879vg)
(5.0,zh2Eja5h54vM7GUibHoi9A)
(5.0,zh-MNFY4TyG7x2itUVlESQ)
outputq2b: Unit = ()

